@startuml architecture
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!include <office/Servers/file_server>
!include <osa/contract/contract>
!include <office/Security/token_service>

skinparam monochrome true

AddContainerTag("files", $sprite="file_server", $legendText="cryptographic wallet")
AddContainerTag("contract", $sprite="contract", $legendText="smart contract")
AddContainerTag("edge",$sprite="token_service", $legendText="registered edge device", $bgColor="#444444")

Person(admin, "Hydrogen Producer")
Person(regulator, "Carbon Market Regulator")
Person(consumer, "Consumer")
Container(edge, "Registered Production Device", "CO2e", $tags="edge")
System_Boundary(c1, "Carbon Market Application") {
    Container(web_app, "Web Application", "React", "Allows users to purchase/sell Carboncoin for Emissions Trading")
}
System_Boundary(cli, "Regulator Application") {
    Container(cli_app, "CLI Application", "CLI", "Allows regulator to specify index weights")
}
System_Boundary(cli_reporting, "Reporting Application") {
    Container(cli_r_app, "CLI Application", "CLI", "Allows manual / automated reporting of raw data")
}
System_Boundary(web_server, "Replicated Web Server") {
    Container(api, "HTTPS API", "Express", "Allow frontend to query the API for user actions")
    Container(wallet, "Cryptograhpic Wallet", "X.509", $tags="files")
    Container(credentials, "Identity Management", "Database")
}
System_Boundary(blockchain, "Permissioned Emissions Trading Blockchain") {
    System_Boundary(market_channel, "Carbon Market Blockchain Channel") {
        Container(cmsc, "Carbon Market Smart Contracts", "Chaincode", "Immutable Recording of Emissions Trading", $tags="contract")
        Container(cmec, "Energy Production Index Smart Contract", "Chaincode", "Immutable Recording of Energy Production", $tags="contract")
        Container(cmesg, "ESG Index Smart Contract", "Chaincode", "Immutable Recording of ESG Certificates", $tags="contract")
    }
    System_Boundary(certification, "ESG Channel") {
        Container(cc, "Smart Contracts for ESG and Energy Certification", "Chaincode", "Business Logic for Creating Certificates")
    }
    Container(c_auth, "Certificate Authority", "Blockchain Certificate Services")
}

Lay_D(admin, c1)
Lay_D(regulator, cli)
Lay_R(regulator, edge)
Lay_D(c1, web_server)
Lay_D(cli, web_server)
Lay_L(c1, cli)
Lay_D(web_server, blockchain)


Rel(consumer, web_app, "Purchases/Sells", "HTTPS")
Rel(admin, web_app, "Uses", "HTTPS")
Rel(admin, cli_r_app, "Submits ESG Raw Data/Reports")
Rel(regulator, cli_app, "Change reputation weights")

Rel(edge, cli_r_app, "Submits Raw CO2e from Production", "Chaincode Invoke")

Rel_D(web_app, api, "Read/update resources", "HTTPS")

Rel_D(cli_app, api, "Change reputation weights", "HTTPS")

Rel_L(api, credentials, "Check user", "Local")
Rel_R(api, wallet, "Retrieve X.509 Credentials", "File Operation")

Rel(cli_r_app, api, "ESG Data", "Submit ESG Data", "HTTPS")
Rel(api, cc, "ESG Raw Data Submission", "Chaincode Invoke")
Rel(cmec, cmsc, "Report Energy Production", "Chaincode Invoke")
Rel(cmesg, cmsc, "Report ESG Certification", "Chaincode Invoke")
Rel(api, cmsc, "Emissions Trading Operation", "Chaincode Invoke")
Rel(api, cmec, "Change Energy Weight", "Chaincode Invoke")
Rel(api, cmesg, "Change ESG Weight", "Chaincode Invoke")
Rel(cc, cmec, "Final Index Report", "Chaincode Invoke")
Rel(cc, cmesg, "Final Index Report", "Chaincode Invoke")

SHOW_LEGEND()
@enduml